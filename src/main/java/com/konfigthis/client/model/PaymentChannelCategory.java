/*
 * PGW Payment API 4.3
 * Rest API for PGW payment purpose - LATEST
 *
 * The version of the OpenAPI document: 4.3
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ResponsePaymentChannel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PaymentChannelCategory
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PaymentChannelCategory {
  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  private List<ResponsePaymentChannel> groups = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_SEQUENCE_NO = "sequenceNo";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_NO)
  private Integer sequenceNo;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_ICON_URL = "iconUrl";
  @SerializedName(SERIALIZED_NAME_ICON_URL)
  private String iconUrl;

  public static final String SERIALIZED_NAME_LOGO_URL = "logoUrl";
  @SerializedName(SERIALIZED_NAME_LOGO_URL)
  private String logoUrl;

  public static final String SERIALIZED_NAME_DEFAULT = "default";
  @SerializedName(SERIALIZED_NAME_DEFAULT)
  private Boolean _default;

  public static final String SERIALIZED_NAME_CHANNEL_CODE = "channelCode";
  @SerializedName(SERIALIZED_NAME_CHANNEL_CODE)
  private String channelCode;

  public static final String SERIALIZED_NAME_AGENT_CHANNEL_CODE = "agentChannelCode";
  @SerializedName(SERIALIZED_NAME_AGENT_CHANNEL_CODE)
  private String agentChannelCode;

  public static final String SERIALIZED_NAME_OPTION_NAME = "optionName";
  @SerializedName(SERIALIZED_NAME_OPTION_NAME)
  private String optionName;

  public static final String SERIALIZED_NAME_PAYMENT_CODE = "paymentCode";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CODE)
  private String paymentCode;

  public static final String SERIALIZED_NAME_QR_TYPE = "qrType";
  @SerializedName(SERIALIZED_NAME_QR_TYPE)
  private String qrType;

  public static final String SERIALIZED_NAME_EXPIRATION_TIMER = "expirationTimer";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_TIMER)
  private String expirationTimer;

  public static final String SERIALIZED_NAME_EXPIRATION_DESCRIPTION = "expirationDescription";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DESCRIPTION)
  private String expirationDescription;

  public static final String SERIALIZED_NAME_EXPIRATION = "expiration";
  @SerializedName(SERIALIZED_NAME_EXPIRATION)
  private Boolean expiration;

  public PaymentChannelCategory() {
  }

  public PaymentChannelCategory groups(List<ResponsePaymentChannel> groups) {
    
    
    
    
    this.groups = groups;
    return this;
  }

  public PaymentChannelCategory addGroupsItem(ResponsePaymentChannel groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ResponsePaymentChannel> getGroups() {
    return groups;
  }


  public void setGroups(List<ResponsePaymentChannel> groups) {
    
    
    
    this.groups = groups;
  }


  public PaymentChannelCategory id(Integer id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    
    
    
    this.id = id;
  }


  public PaymentChannelCategory sequenceNo(Integer sequenceNo) {
    
    
    
    
    this.sequenceNo = sequenceNo;
    return this;
  }

   /**
   * Get sequenceNo
   * @return sequenceNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSequenceNo() {
    return sequenceNo;
  }


  public void setSequenceNo(Integer sequenceNo) {
    
    
    
    this.sequenceNo = sequenceNo;
  }


  public PaymentChannelCategory name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public PaymentChannelCategory code(String code) {
    
    
    
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    
    
    
    this.code = code;
  }


  public PaymentChannelCategory iconUrl(String iconUrl) {
    
    
    
    
    this.iconUrl = iconUrl;
    return this;
  }

   /**
   * Get iconUrl
   * @return iconUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIconUrl() {
    return iconUrl;
  }


  public void setIconUrl(String iconUrl) {
    
    
    
    this.iconUrl = iconUrl;
  }


  public PaymentChannelCategory logoUrl(String logoUrl) {
    
    
    
    
    this.logoUrl = logoUrl;
    return this;
  }

   /**
   * Get logoUrl
   * @return logoUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLogoUrl() {
    return logoUrl;
  }


  public void setLogoUrl(String logoUrl) {
    
    
    
    this.logoUrl = logoUrl;
  }


  public PaymentChannelCategory _default(Boolean _default) {
    
    
    
    
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDefault() {
    return _default;
  }


  public void setDefault(Boolean _default) {
    
    
    
    this._default = _default;
  }


  public PaymentChannelCategory channelCode(String channelCode) {
    
    
    
    
    this.channelCode = channelCode;
    return this;
  }

   /**
   * Get channelCode
   * @return channelCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChannelCode() {
    return channelCode;
  }


  public void setChannelCode(String channelCode) {
    
    
    
    this.channelCode = channelCode;
  }


  public PaymentChannelCategory agentChannelCode(String agentChannelCode) {
    
    
    
    
    this.agentChannelCode = agentChannelCode;
    return this;
  }

   /**
   * Get agentChannelCode
   * @return agentChannelCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAgentChannelCode() {
    return agentChannelCode;
  }


  public void setAgentChannelCode(String agentChannelCode) {
    
    
    
    this.agentChannelCode = agentChannelCode;
  }


  public PaymentChannelCategory optionName(String optionName) {
    
    
    
    
    this.optionName = optionName;
    return this;
  }

   /**
   * Get optionName
   * @return optionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOptionName() {
    return optionName;
  }


  public void setOptionName(String optionName) {
    
    
    
    this.optionName = optionName;
  }


  public PaymentChannelCategory paymentCode(String paymentCode) {
    
    
    
    
    this.paymentCode = paymentCode;
    return this;
  }

   /**
   * Get paymentCode
   * @return paymentCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPaymentCode() {
    return paymentCode;
  }


  public void setPaymentCode(String paymentCode) {
    
    
    
    this.paymentCode = paymentCode;
  }


  public PaymentChannelCategory qrType(String qrType) {
    
    
    
    
    this.qrType = qrType;
    return this;
  }

   /**
   * Get qrType
   * @return qrType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getQrType() {
    return qrType;
  }


  public void setQrType(String qrType) {
    
    
    
    this.qrType = qrType;
  }


  public PaymentChannelCategory expirationTimer(String expirationTimer) {
    
    
    
    
    this.expirationTimer = expirationTimer;
    return this;
  }

   /**
   * Get expirationTimer
   * @return expirationTimer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExpirationTimer() {
    return expirationTimer;
  }


  public void setExpirationTimer(String expirationTimer) {
    
    
    
    this.expirationTimer = expirationTimer;
  }


  public PaymentChannelCategory expirationDescription(String expirationDescription) {
    
    
    
    
    this.expirationDescription = expirationDescription;
    return this;
  }

   /**
   * Get expirationDescription
   * @return expirationDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExpirationDescription() {
    return expirationDescription;
  }


  public void setExpirationDescription(String expirationDescription) {
    
    
    
    this.expirationDescription = expirationDescription;
  }


  public PaymentChannelCategory expiration(Boolean expiration) {
    
    
    
    
    this.expiration = expiration;
    return this;
  }

   /**
   * Get expiration
   * @return expiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getExpiration() {
    return expiration;
  }


  public void setExpiration(Boolean expiration) {
    
    
    
    this.expiration = expiration;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PaymentChannelCategory instance itself
   */
  public PaymentChannelCategory putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentChannelCategory paymentChannelCategory = (PaymentChannelCategory) o;
    return Objects.equals(this.groups, paymentChannelCategory.groups) &&
        Objects.equals(this.id, paymentChannelCategory.id) &&
        Objects.equals(this.sequenceNo, paymentChannelCategory.sequenceNo) &&
        Objects.equals(this.name, paymentChannelCategory.name) &&
        Objects.equals(this.code, paymentChannelCategory.code) &&
        Objects.equals(this.iconUrl, paymentChannelCategory.iconUrl) &&
        Objects.equals(this.logoUrl, paymentChannelCategory.logoUrl) &&
        Objects.equals(this._default, paymentChannelCategory._default) &&
        Objects.equals(this.channelCode, paymentChannelCategory.channelCode) &&
        Objects.equals(this.agentChannelCode, paymentChannelCategory.agentChannelCode) &&
        Objects.equals(this.optionName, paymentChannelCategory.optionName) &&
        Objects.equals(this.paymentCode, paymentChannelCategory.paymentCode) &&
        Objects.equals(this.qrType, paymentChannelCategory.qrType) &&
        Objects.equals(this.expirationTimer, paymentChannelCategory.expirationTimer) &&
        Objects.equals(this.expirationDescription, paymentChannelCategory.expirationDescription) &&
        Objects.equals(this.expiration, paymentChannelCategory.expiration)&&
        Objects.equals(this.additionalProperties, paymentChannelCategory.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(groups, id, sequenceNo, name, code, iconUrl, logoUrl, _default, channelCode, agentChannelCode, optionName, paymentCode, qrType, expirationTimer, expirationDescription, expiration, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentChannelCategory {\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sequenceNo: ").append(toIndentedString(sequenceNo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    iconUrl: ").append(toIndentedString(iconUrl)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    channelCode: ").append(toIndentedString(channelCode)).append("\n");
    sb.append("    agentChannelCode: ").append(toIndentedString(agentChannelCode)).append("\n");
    sb.append("    optionName: ").append(toIndentedString(optionName)).append("\n");
    sb.append("    paymentCode: ").append(toIndentedString(paymentCode)).append("\n");
    sb.append("    qrType: ").append(toIndentedString(qrType)).append("\n");
    sb.append("    expirationTimer: ").append(toIndentedString(expirationTimer)).append("\n");
    sb.append("    expirationDescription: ").append(toIndentedString(expirationDescription)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("groups");
    openapiFields.add("id");
    openapiFields.add("sequenceNo");
    openapiFields.add("name");
    openapiFields.add("code");
    openapiFields.add("iconUrl");
    openapiFields.add("logoUrl");
    openapiFields.add("default");
    openapiFields.add("channelCode");
    openapiFields.add("agentChannelCode");
    openapiFields.add("optionName");
    openapiFields.add("paymentCode");
    openapiFields.add("qrType");
    openapiFields.add("expirationTimer");
    openapiFields.add("expirationDescription");
    openapiFields.add("expiration");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PaymentChannelCategory
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PaymentChannelCategory.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PaymentChannelCategory is not found in the empty JSON string", PaymentChannelCategory.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("groups") != null && !jsonObj.get("groups").isJsonNull()) {
        JsonArray jsonArraygroups = jsonObj.getAsJsonArray("groups");
        if (jsonArraygroups != null) {
          // ensure the json data is an array
          if (!jsonObj.get("groups").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `groups` to be an array in the JSON string but got `%s`", jsonObj.get("groups").toString()));
          }

          // validate the optional field `groups` (array)
          for (int i = 0; i < jsonArraygroups.size(); i++) {
            ResponsePaymentChannel.validateJsonObject(jsonArraygroups.get(i).getAsJsonObject());
          };
        }
      }
      if (!jsonObj.get("name").isJsonNull() && (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("code").isJsonNull() && (jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if (!jsonObj.get("iconUrl").isJsonNull() && (jsonObj.get("iconUrl") != null && !jsonObj.get("iconUrl").isJsonNull()) && !jsonObj.get("iconUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iconUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iconUrl").toString()));
      }
      if (!jsonObj.get("logoUrl").isJsonNull() && (jsonObj.get("logoUrl") != null && !jsonObj.get("logoUrl").isJsonNull()) && !jsonObj.get("logoUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logoUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logoUrl").toString()));
      }
      if (!jsonObj.get("channelCode").isJsonNull() && (jsonObj.get("channelCode") != null && !jsonObj.get("channelCode").isJsonNull()) && !jsonObj.get("channelCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channelCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channelCode").toString()));
      }
      if (!jsonObj.get("agentChannelCode").isJsonNull() && (jsonObj.get("agentChannelCode") != null && !jsonObj.get("agentChannelCode").isJsonNull()) && !jsonObj.get("agentChannelCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agentChannelCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agentChannelCode").toString()));
      }
      if (!jsonObj.get("optionName").isJsonNull() && (jsonObj.get("optionName") != null && !jsonObj.get("optionName").isJsonNull()) && !jsonObj.get("optionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `optionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("optionName").toString()));
      }
      if (!jsonObj.get("paymentCode").isJsonNull() && (jsonObj.get("paymentCode") != null && !jsonObj.get("paymentCode").isJsonNull()) && !jsonObj.get("paymentCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentCode").toString()));
      }
      if (!jsonObj.get("qrType").isJsonNull() && (jsonObj.get("qrType") != null && !jsonObj.get("qrType").isJsonNull()) && !jsonObj.get("qrType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qrType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qrType").toString()));
      }
      if (!jsonObj.get("expirationTimer").isJsonNull() && (jsonObj.get("expirationTimer") != null && !jsonObj.get("expirationTimer").isJsonNull()) && !jsonObj.get("expirationTimer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expirationTimer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expirationTimer").toString()));
      }
      if (!jsonObj.get("expirationDescription").isJsonNull() && (jsonObj.get("expirationDescription") != null && !jsonObj.get("expirationDescription").isJsonNull()) && !jsonObj.get("expirationDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expirationDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expirationDescription").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PaymentChannelCategory.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PaymentChannelCategory' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PaymentChannelCategory> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PaymentChannelCategory.class));

       return (TypeAdapter<T>) new TypeAdapter<PaymentChannelCategory>() {
           @Override
           public void write(JsonWriter out, PaymentChannelCategory value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PaymentChannelCategory read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PaymentChannelCategory instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PaymentChannelCategory given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PaymentChannelCategory
  * @throws IOException if the JSON string is invalid with respect to PaymentChannelCategory
  */
  public static PaymentChannelCategory fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PaymentChannelCategory.class);
  }

 /**
  * Convert an instance of PaymentChannelCategory to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

