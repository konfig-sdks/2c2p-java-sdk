/*
 * PGW Payment API 4.3
 * Rest API for PGW payment purpose - LATEST
 *
 * The version of the OpenAPI document: 4.3
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.LoyaltyDetails;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PaymentParamsDataRequestV43
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PaymentParamsDataRequestV43 {
  public static final String SERIALIZED_NAME_ACCOUNT_TOKENIZATION = "accountTokenization";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TOKENIZATION)
  private Boolean accountTokenization;

  public static final String SERIALIZED_NAME_CUSTOMER_TOKEN = "customerToken";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_TOKEN)
  private String customerToken;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_MOBILE_NO = "mobileNo";
  @SerializedName(SERIALIZED_NAME_MOBILE_NO)
  private String mobileNo;

  public static final String SERIALIZED_NAME_ACCOUNT_NO = "accountNo";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NO)
  private String accountNo;

  public static final String SERIALIZED_NAME_SECURE_PAY_TOKEN = "securePayToken";
  @SerializedName(SERIALIZED_NAME_SECURE_PAY_TOKEN)
  private String securePayToken;

  public static final String SERIALIZED_NAME_CARD_BANK = "cardBank";
  @SerializedName(SERIALIZED_NAME_CARD_BANK)
  private String cardBank;

  public static final String SERIALIZED_NAME_CARD_COUNTRY = "cardCountry";
  @SerializedName(SERIALIZED_NAME_CARD_COUNTRY)
  private String cardCountry;

  public static final String SERIALIZED_NAME_INSTALLMENT_PERIOD = "installmentPeriod";
  @SerializedName(SERIALIZED_NAME_INSTALLMENT_PERIOD)
  private Integer installmentPeriod;

  public static final String SERIALIZED_NAME_PAY_LATER_PERIOD = "payLaterPeriod";
  @SerializedName(SERIALIZED_NAME_PAY_LATER_PERIOD)
  private Integer payLaterPeriod;

  public static final String SERIALIZED_NAME_INTEREST_TYPE = "interestType";
  @SerializedName(SERIALIZED_NAME_INTEREST_TYPE)
  private String interestType;

  public static final String SERIALIZED_NAME_SECURITY_CODE = "securityCode";
  @SerializedName(SERIALIZED_NAME_SECURITY_CODE)
  private String securityCode;

  public static final String SERIALIZED_NAME_QR_TYPE = "qrType";
  @SerializedName(SERIALIZED_NAME_QR_TYPE)
  private String qrType;

  public static final String SERIALIZED_NAME_FX_RATE_I_D = "fxRateID";
  @SerializedName(SERIALIZED_NAME_FX_RATE_I_D)
  private String fxRateID;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS1 = "billingAddress1";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS1)
  private String billingAddress1;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS2 = "billingAddress2";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS2)
  private String billingAddress2;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS3 = "billingAddress3";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS3)
  private String billingAddress3;

  public static final String SERIALIZED_NAME_BILLING_CITY = "billingCity";
  @SerializedName(SERIALIZED_NAME_BILLING_CITY)
  private String billingCity;

  public static final String SERIALIZED_NAME_BILLING_STATE = "billingState";
  @SerializedName(SERIALIZED_NAME_BILLING_STATE)
  private String billingState;

  public static final String SERIALIZED_NAME_BILLING_POSTAL_CODE = "billingPostalCode";
  @SerializedName(SERIALIZED_NAME_BILLING_POSTAL_CODE)
  private String billingPostalCode;

  public static final String SERIALIZED_NAME_BILLING_COUNTRY_CODE = "billingCountryCode";
  @SerializedName(SERIALIZED_NAME_BILLING_COUNTRY_CODE)
  private String billingCountryCode;

  public static final String SERIALIZED_NAME_PAYMENT_EXPIRY = "paymentExpiry";
  @SerializedName(SERIALIZED_NAME_PAYMENT_EXPIRY)
  private String paymentExpiry;

  public static final String SERIALIZED_NAME_CARD_NO = "cardNo";
  @SerializedName(SERIALIZED_NAME_CARD_NO)
  private String cardNo;

  public static final String SERIALIZED_NAME_EXPIRY_MONTH = "expiryMonth";
  @SerializedName(SERIALIZED_NAME_EXPIRY_MONTH)
  private String expiryMonth;

  public static final String SERIALIZED_NAME_EXPIRY_YEAR = "expiryYear";
  @SerializedName(SERIALIZED_NAME_EXPIRY_YEAR)
  private String expiryYear;

  public static final String SERIALIZED_NAME_PIN = "pin";
  @SerializedName(SERIALIZED_NAME_PIN)
  private String pin;

  public static final String SERIALIZED_NAME_LOYALTY_POINTS = "loyaltyPoints";
  @SerializedName(SERIALIZED_NAME_LOYALTY_POINTS)
  private List<LoyaltyDetails> loyaltyPoints = null;

  public static final String SERIALIZED_NAME_CUSTOMER_NOTE = "customerNote";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NOTE)
  private String customerNote;

  public static final String SERIALIZED_NAME_USER_AGENT = "userAgent";
  @SerializedName(SERIALIZED_NAME_USER_AGENT)
  private String userAgent;

  public PaymentParamsDataRequestV43() {
  }

  public PaymentParamsDataRequestV43 accountTokenization(Boolean accountTokenization) {
    
    
    
    
    this.accountTokenization = accountTokenization;
    return this;
  }

   /**
   * Get accountTokenization
   * @return accountTokenization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAccountTokenization() {
    return accountTokenization;
  }


  public void setAccountTokenization(Boolean accountTokenization) {
    
    
    
    this.accountTokenization = accountTokenization;
  }


  public PaymentParamsDataRequestV43 customerToken(String customerToken) {
    
    
    
    
    this.customerToken = customerToken;
    return this;
  }

   /**
   * Get customerToken
   * @return customerToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCustomerToken() {
    return customerToken;
  }


  public void setCustomerToken(String customerToken) {
    
    
    
    this.customerToken = customerToken;
  }


  public PaymentParamsDataRequestV43 name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public PaymentParamsDataRequestV43 email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public PaymentParamsDataRequestV43 mobileNo(String mobileNo) {
    
    
    
    
    this.mobileNo = mobileNo;
    return this;
  }

   /**
   * Get mobileNo
   * @return mobileNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMobileNo() {
    return mobileNo;
  }


  public void setMobileNo(String mobileNo) {
    
    
    
    this.mobileNo = mobileNo;
  }


  public PaymentParamsDataRequestV43 accountNo(String accountNo) {
    
    
    
    
    this.accountNo = accountNo;
    return this;
  }

   /**
   * Get accountNo
   * @return accountNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountNo() {
    return accountNo;
  }


  public void setAccountNo(String accountNo) {
    
    
    
    this.accountNo = accountNo;
  }


  public PaymentParamsDataRequestV43 securePayToken(String securePayToken) {
    
    
    
    
    this.securePayToken = securePayToken;
    return this;
  }

   /**
   * Get securePayToken
   * @return securePayToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecurePayToken() {
    return securePayToken;
  }


  public void setSecurePayToken(String securePayToken) {
    
    
    
    this.securePayToken = securePayToken;
  }


  public PaymentParamsDataRequestV43 cardBank(String cardBank) {
    
    
    
    
    this.cardBank = cardBank;
    return this;
  }

   /**
   * Get cardBank
   * @return cardBank
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCardBank() {
    return cardBank;
  }


  public void setCardBank(String cardBank) {
    
    
    
    this.cardBank = cardBank;
  }


  public PaymentParamsDataRequestV43 cardCountry(String cardCountry) {
    
    
    
    
    this.cardCountry = cardCountry;
    return this;
  }

   /**
   * Get cardCountry
   * @return cardCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCardCountry() {
    return cardCountry;
  }


  public void setCardCountry(String cardCountry) {
    
    
    
    this.cardCountry = cardCountry;
  }


  public PaymentParamsDataRequestV43 installmentPeriod(Integer installmentPeriod) {
    
    
    
    
    this.installmentPeriod = installmentPeriod;
    return this;
  }

   /**
   * Get installmentPeriod
   * @return installmentPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getInstallmentPeriod() {
    return installmentPeriod;
  }


  public void setInstallmentPeriod(Integer installmentPeriod) {
    
    
    
    this.installmentPeriod = installmentPeriod;
  }


  public PaymentParamsDataRequestV43 payLaterPeriod(Integer payLaterPeriod) {
    
    
    
    
    this.payLaterPeriod = payLaterPeriod;
    return this;
  }

   /**
   * Get payLaterPeriod
   * @return payLaterPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPayLaterPeriod() {
    return payLaterPeriod;
  }


  public void setPayLaterPeriod(Integer payLaterPeriod) {
    
    
    
    this.payLaterPeriod = payLaterPeriod;
  }


  public PaymentParamsDataRequestV43 interestType(String interestType) {
    
    
    
    
    this.interestType = interestType;
    return this;
  }

   /**
   * Get interestType
   * @return interestType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInterestType() {
    return interestType;
  }


  public void setInterestType(String interestType) {
    
    
    
    this.interestType = interestType;
  }


  public PaymentParamsDataRequestV43 securityCode(String securityCode) {
    
    
    
    
    this.securityCode = securityCode;
    return this;
  }

   /**
   * Get securityCode
   * @return securityCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSecurityCode() {
    return securityCode;
  }


  public void setSecurityCode(String securityCode) {
    
    
    
    this.securityCode = securityCode;
  }


  public PaymentParamsDataRequestV43 qrType(String qrType) {
    
    
    
    
    this.qrType = qrType;
    return this;
  }

   /**
   * Get qrType
   * @return qrType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getQrType() {
    return qrType;
  }


  public void setQrType(String qrType) {
    
    
    
    this.qrType = qrType;
  }


  public PaymentParamsDataRequestV43 fxRateID(String fxRateID) {
    
    
    
    
    this.fxRateID = fxRateID;
    return this;
  }

   /**
   * Get fxRateID
   * @return fxRateID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFxRateID() {
    return fxRateID;
  }


  public void setFxRateID(String fxRateID) {
    
    
    
    this.fxRateID = fxRateID;
  }


  public PaymentParamsDataRequestV43 billingAddress1(String billingAddress1) {
    
    
    
    
    this.billingAddress1 = billingAddress1;
    return this;
  }

   /**
   * Get billingAddress1
   * @return billingAddress1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBillingAddress1() {
    return billingAddress1;
  }


  public void setBillingAddress1(String billingAddress1) {
    
    
    
    this.billingAddress1 = billingAddress1;
  }


  public PaymentParamsDataRequestV43 billingAddress2(String billingAddress2) {
    
    
    
    
    this.billingAddress2 = billingAddress2;
    return this;
  }

   /**
   * Get billingAddress2
   * @return billingAddress2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBillingAddress2() {
    return billingAddress2;
  }


  public void setBillingAddress2(String billingAddress2) {
    
    
    
    this.billingAddress2 = billingAddress2;
  }


  public PaymentParamsDataRequestV43 billingAddress3(String billingAddress3) {
    
    
    
    
    this.billingAddress3 = billingAddress3;
    return this;
  }

   /**
   * Get billingAddress3
   * @return billingAddress3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBillingAddress3() {
    return billingAddress3;
  }


  public void setBillingAddress3(String billingAddress3) {
    
    
    
    this.billingAddress3 = billingAddress3;
  }


  public PaymentParamsDataRequestV43 billingCity(String billingCity) {
    
    
    
    
    this.billingCity = billingCity;
    return this;
  }

   /**
   * Get billingCity
   * @return billingCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBillingCity() {
    return billingCity;
  }


  public void setBillingCity(String billingCity) {
    
    
    
    this.billingCity = billingCity;
  }


  public PaymentParamsDataRequestV43 billingState(String billingState) {
    
    
    
    
    this.billingState = billingState;
    return this;
  }

   /**
   * Get billingState
   * @return billingState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBillingState() {
    return billingState;
  }


  public void setBillingState(String billingState) {
    
    
    
    this.billingState = billingState;
  }


  public PaymentParamsDataRequestV43 billingPostalCode(String billingPostalCode) {
    
    
    
    
    this.billingPostalCode = billingPostalCode;
    return this;
  }

   /**
   * Get billingPostalCode
   * @return billingPostalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBillingPostalCode() {
    return billingPostalCode;
  }


  public void setBillingPostalCode(String billingPostalCode) {
    
    
    
    this.billingPostalCode = billingPostalCode;
  }


  public PaymentParamsDataRequestV43 billingCountryCode(String billingCountryCode) {
    
    
    
    
    this.billingCountryCode = billingCountryCode;
    return this;
  }

   /**
   * Get billingCountryCode
   * @return billingCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBillingCountryCode() {
    return billingCountryCode;
  }


  public void setBillingCountryCode(String billingCountryCode) {
    
    
    
    this.billingCountryCode = billingCountryCode;
  }


  public PaymentParamsDataRequestV43 paymentExpiry(String paymentExpiry) {
    
    
    
    
    this.paymentExpiry = paymentExpiry;
    return this;
  }

   /**
   * Get paymentExpiry
   * @return paymentExpiry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPaymentExpiry() {
    return paymentExpiry;
  }


  public void setPaymentExpiry(String paymentExpiry) {
    
    
    
    this.paymentExpiry = paymentExpiry;
  }


  public PaymentParamsDataRequestV43 cardNo(String cardNo) {
    
    
    
    
    this.cardNo = cardNo;
    return this;
  }

   /**
   * Get cardNo
   * @return cardNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCardNo() {
    return cardNo;
  }


  public void setCardNo(String cardNo) {
    
    
    
    this.cardNo = cardNo;
  }


  public PaymentParamsDataRequestV43 expiryMonth(String expiryMonth) {
    
    
    
    
    this.expiryMonth = expiryMonth;
    return this;
  }

   /**
   * Get expiryMonth
   * @return expiryMonth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExpiryMonth() {
    return expiryMonth;
  }


  public void setExpiryMonth(String expiryMonth) {
    
    
    
    this.expiryMonth = expiryMonth;
  }


  public PaymentParamsDataRequestV43 expiryYear(String expiryYear) {
    
    
    
    
    this.expiryYear = expiryYear;
    return this;
  }

   /**
   * Get expiryYear
   * @return expiryYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExpiryYear() {
    return expiryYear;
  }


  public void setExpiryYear(String expiryYear) {
    
    
    
    this.expiryYear = expiryYear;
  }


  public PaymentParamsDataRequestV43 pin(String pin) {
    
    
    
    
    this.pin = pin;
    return this;
  }

   /**
   * Get pin
   * @return pin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPin() {
    return pin;
  }


  public void setPin(String pin) {
    
    
    
    this.pin = pin;
  }


  public PaymentParamsDataRequestV43 loyaltyPoints(List<LoyaltyDetails> loyaltyPoints) {
    
    
    
    
    this.loyaltyPoints = loyaltyPoints;
    return this;
  }

  public PaymentParamsDataRequestV43 addLoyaltyPointsItem(LoyaltyDetails loyaltyPointsItem) {
    if (this.loyaltyPoints == null) {
      this.loyaltyPoints = new ArrayList<>();
    }
    this.loyaltyPoints.add(loyaltyPointsItem);
    return this;
  }

   /**
   * Get loyaltyPoints
   * @return loyaltyPoints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<LoyaltyDetails> getLoyaltyPoints() {
    return loyaltyPoints;
  }


  public void setLoyaltyPoints(List<LoyaltyDetails> loyaltyPoints) {
    
    
    
    this.loyaltyPoints = loyaltyPoints;
  }


  public PaymentParamsDataRequestV43 customerNote(String customerNote) {
    
    
    
    
    this.customerNote = customerNote;
    return this;
  }

   /**
   * Get customerNote
   * @return customerNote
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCustomerNote() {
    return customerNote;
  }


  public void setCustomerNote(String customerNote) {
    
    
    
    this.customerNote = customerNote;
  }


  public PaymentParamsDataRequestV43 userAgent(String userAgent) {
    
    
    
    
    this.userAgent = userAgent;
    return this;
  }

   /**
   * Get userAgent
   * @return userAgent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserAgent() {
    return userAgent;
  }


  public void setUserAgent(String userAgent) {
    
    
    
    this.userAgent = userAgent;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PaymentParamsDataRequestV43 instance itself
   */
  public PaymentParamsDataRequestV43 putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentParamsDataRequestV43 paymentParamsDataRequestV43 = (PaymentParamsDataRequestV43) o;
    return Objects.equals(this.accountTokenization, paymentParamsDataRequestV43.accountTokenization) &&
        Objects.equals(this.customerToken, paymentParamsDataRequestV43.customerToken) &&
        Objects.equals(this.name, paymentParamsDataRequestV43.name) &&
        Objects.equals(this.email, paymentParamsDataRequestV43.email) &&
        Objects.equals(this.mobileNo, paymentParamsDataRequestV43.mobileNo) &&
        Objects.equals(this.accountNo, paymentParamsDataRequestV43.accountNo) &&
        Objects.equals(this.securePayToken, paymentParamsDataRequestV43.securePayToken) &&
        Objects.equals(this.cardBank, paymentParamsDataRequestV43.cardBank) &&
        Objects.equals(this.cardCountry, paymentParamsDataRequestV43.cardCountry) &&
        Objects.equals(this.installmentPeriod, paymentParamsDataRequestV43.installmentPeriod) &&
        Objects.equals(this.payLaterPeriod, paymentParamsDataRequestV43.payLaterPeriod) &&
        Objects.equals(this.interestType, paymentParamsDataRequestV43.interestType) &&
        Objects.equals(this.securityCode, paymentParamsDataRequestV43.securityCode) &&
        Objects.equals(this.qrType, paymentParamsDataRequestV43.qrType) &&
        Objects.equals(this.fxRateID, paymentParamsDataRequestV43.fxRateID) &&
        Objects.equals(this.billingAddress1, paymentParamsDataRequestV43.billingAddress1) &&
        Objects.equals(this.billingAddress2, paymentParamsDataRequestV43.billingAddress2) &&
        Objects.equals(this.billingAddress3, paymentParamsDataRequestV43.billingAddress3) &&
        Objects.equals(this.billingCity, paymentParamsDataRequestV43.billingCity) &&
        Objects.equals(this.billingState, paymentParamsDataRequestV43.billingState) &&
        Objects.equals(this.billingPostalCode, paymentParamsDataRequestV43.billingPostalCode) &&
        Objects.equals(this.billingCountryCode, paymentParamsDataRequestV43.billingCountryCode) &&
        Objects.equals(this.paymentExpiry, paymentParamsDataRequestV43.paymentExpiry) &&
        Objects.equals(this.cardNo, paymentParamsDataRequestV43.cardNo) &&
        Objects.equals(this.expiryMonth, paymentParamsDataRequestV43.expiryMonth) &&
        Objects.equals(this.expiryYear, paymentParamsDataRequestV43.expiryYear) &&
        Objects.equals(this.pin, paymentParamsDataRequestV43.pin) &&
        Objects.equals(this.loyaltyPoints, paymentParamsDataRequestV43.loyaltyPoints) &&
        Objects.equals(this.customerNote, paymentParamsDataRequestV43.customerNote) &&
        Objects.equals(this.userAgent, paymentParamsDataRequestV43.userAgent)&&
        Objects.equals(this.additionalProperties, paymentParamsDataRequestV43.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountTokenization, customerToken, name, email, mobileNo, accountNo, securePayToken, cardBank, cardCountry, installmentPeriod, payLaterPeriod, interestType, securityCode, qrType, fxRateID, billingAddress1, billingAddress2, billingAddress3, billingCity, billingState, billingPostalCode, billingCountryCode, paymentExpiry, cardNo, expiryMonth, expiryYear, pin, loyaltyPoints, customerNote, userAgent, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentParamsDataRequestV43 {\n");
    sb.append("    accountTokenization: ").append(toIndentedString(accountTokenization)).append("\n");
    sb.append("    customerToken: ").append(toIndentedString(customerToken)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    mobileNo: ").append(toIndentedString(mobileNo)).append("\n");
    sb.append("    accountNo: ").append(toIndentedString(accountNo)).append("\n");
    sb.append("    securePayToken: ").append(toIndentedString(securePayToken)).append("\n");
    sb.append("    cardBank: ").append(toIndentedString(cardBank)).append("\n");
    sb.append("    cardCountry: ").append(toIndentedString(cardCountry)).append("\n");
    sb.append("    installmentPeriod: ").append(toIndentedString(installmentPeriod)).append("\n");
    sb.append("    payLaterPeriod: ").append(toIndentedString(payLaterPeriod)).append("\n");
    sb.append("    interestType: ").append(toIndentedString(interestType)).append("\n");
    sb.append("    securityCode: ").append(toIndentedString(securityCode)).append("\n");
    sb.append("    qrType: ").append(toIndentedString(qrType)).append("\n");
    sb.append("    fxRateID: ").append(toIndentedString(fxRateID)).append("\n");
    sb.append("    billingAddress1: ").append(toIndentedString(billingAddress1)).append("\n");
    sb.append("    billingAddress2: ").append(toIndentedString(billingAddress2)).append("\n");
    sb.append("    billingAddress3: ").append(toIndentedString(billingAddress3)).append("\n");
    sb.append("    billingCity: ").append(toIndentedString(billingCity)).append("\n");
    sb.append("    billingState: ").append(toIndentedString(billingState)).append("\n");
    sb.append("    billingPostalCode: ").append(toIndentedString(billingPostalCode)).append("\n");
    sb.append("    billingCountryCode: ").append(toIndentedString(billingCountryCode)).append("\n");
    sb.append("    paymentExpiry: ").append(toIndentedString(paymentExpiry)).append("\n");
    sb.append("    cardNo: ").append(toIndentedString(cardNo)).append("\n");
    sb.append("    expiryMonth: ").append(toIndentedString(expiryMonth)).append("\n");
    sb.append("    expiryYear: ").append(toIndentedString(expiryYear)).append("\n");
    sb.append("    pin: ").append(toIndentedString(pin)).append("\n");
    sb.append("    loyaltyPoints: ").append(toIndentedString(loyaltyPoints)).append("\n");
    sb.append("    customerNote: ").append(toIndentedString(customerNote)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountTokenization");
    openapiFields.add("customerToken");
    openapiFields.add("name");
    openapiFields.add("email");
    openapiFields.add("mobileNo");
    openapiFields.add("accountNo");
    openapiFields.add("securePayToken");
    openapiFields.add("cardBank");
    openapiFields.add("cardCountry");
    openapiFields.add("installmentPeriod");
    openapiFields.add("payLaterPeriod");
    openapiFields.add("interestType");
    openapiFields.add("securityCode");
    openapiFields.add("qrType");
    openapiFields.add("fxRateID");
    openapiFields.add("billingAddress1");
    openapiFields.add("billingAddress2");
    openapiFields.add("billingAddress3");
    openapiFields.add("billingCity");
    openapiFields.add("billingState");
    openapiFields.add("billingPostalCode");
    openapiFields.add("billingCountryCode");
    openapiFields.add("paymentExpiry");
    openapiFields.add("cardNo");
    openapiFields.add("expiryMonth");
    openapiFields.add("expiryYear");
    openapiFields.add("pin");
    openapiFields.add("loyaltyPoints");
    openapiFields.add("customerNote");
    openapiFields.add("userAgent");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PaymentParamsDataRequestV43
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PaymentParamsDataRequestV43.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PaymentParamsDataRequestV43 is not found in the empty JSON string", PaymentParamsDataRequestV43.openapiRequiredFields.toString()));
        }
      }
      if (!jsonObj.get("customerToken").isJsonNull() && (jsonObj.get("customerToken") != null && !jsonObj.get("customerToken").isJsonNull()) && !jsonObj.get("customerToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerToken").toString()));
      }
      if (!jsonObj.get("name").isJsonNull() && (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("email").isJsonNull() && (jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (!jsonObj.get("mobileNo").isJsonNull() && (jsonObj.get("mobileNo") != null && !jsonObj.get("mobileNo").isJsonNull()) && !jsonObj.get("mobileNo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobileNo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobileNo").toString()));
      }
      if (!jsonObj.get("accountNo").isJsonNull() && (jsonObj.get("accountNo") != null && !jsonObj.get("accountNo").isJsonNull()) && !jsonObj.get("accountNo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountNo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountNo").toString()));
      }
      if (!jsonObj.get("securePayToken").isJsonNull() && (jsonObj.get("securePayToken") != null && !jsonObj.get("securePayToken").isJsonNull()) && !jsonObj.get("securePayToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `securePayToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("securePayToken").toString()));
      }
      if (!jsonObj.get("cardBank").isJsonNull() && (jsonObj.get("cardBank") != null && !jsonObj.get("cardBank").isJsonNull()) && !jsonObj.get("cardBank").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardBank` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardBank").toString()));
      }
      if (!jsonObj.get("cardCountry").isJsonNull() && (jsonObj.get("cardCountry") != null && !jsonObj.get("cardCountry").isJsonNull()) && !jsonObj.get("cardCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardCountry").toString()));
      }
      if (!jsonObj.get("interestType").isJsonNull() && (jsonObj.get("interestType") != null && !jsonObj.get("interestType").isJsonNull()) && !jsonObj.get("interestType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interestType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interestType").toString()));
      }
      if (!jsonObj.get("securityCode").isJsonNull() && (jsonObj.get("securityCode") != null && !jsonObj.get("securityCode").isJsonNull()) && !jsonObj.get("securityCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `securityCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("securityCode").toString()));
      }
      if (!jsonObj.get("qrType").isJsonNull() && (jsonObj.get("qrType") != null && !jsonObj.get("qrType").isJsonNull()) && !jsonObj.get("qrType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qrType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qrType").toString()));
      }
      if (!jsonObj.get("fxRateID").isJsonNull() && (jsonObj.get("fxRateID") != null && !jsonObj.get("fxRateID").isJsonNull()) && !jsonObj.get("fxRateID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fxRateID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fxRateID").toString()));
      }
      if (!jsonObj.get("billingAddress1").isJsonNull() && (jsonObj.get("billingAddress1") != null && !jsonObj.get("billingAddress1").isJsonNull()) && !jsonObj.get("billingAddress1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingAddress1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingAddress1").toString()));
      }
      if (!jsonObj.get("billingAddress2").isJsonNull() && (jsonObj.get("billingAddress2") != null && !jsonObj.get("billingAddress2").isJsonNull()) && !jsonObj.get("billingAddress2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingAddress2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingAddress2").toString()));
      }
      if (!jsonObj.get("billingAddress3").isJsonNull() && (jsonObj.get("billingAddress3") != null && !jsonObj.get("billingAddress3").isJsonNull()) && !jsonObj.get("billingAddress3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingAddress3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingAddress3").toString()));
      }
      if (!jsonObj.get("billingCity").isJsonNull() && (jsonObj.get("billingCity") != null && !jsonObj.get("billingCity").isJsonNull()) && !jsonObj.get("billingCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingCity").toString()));
      }
      if (!jsonObj.get("billingState").isJsonNull() && (jsonObj.get("billingState") != null && !jsonObj.get("billingState").isJsonNull()) && !jsonObj.get("billingState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingState").toString()));
      }
      if (!jsonObj.get("billingPostalCode").isJsonNull() && (jsonObj.get("billingPostalCode") != null && !jsonObj.get("billingPostalCode").isJsonNull()) && !jsonObj.get("billingPostalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingPostalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingPostalCode").toString()));
      }
      if (!jsonObj.get("billingCountryCode").isJsonNull() && (jsonObj.get("billingCountryCode") != null && !jsonObj.get("billingCountryCode").isJsonNull()) && !jsonObj.get("billingCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billingCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billingCountryCode").toString()));
      }
      if (!jsonObj.get("paymentExpiry").isJsonNull() && (jsonObj.get("paymentExpiry") != null && !jsonObj.get("paymentExpiry").isJsonNull()) && !jsonObj.get("paymentExpiry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentExpiry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentExpiry").toString()));
      }
      if (!jsonObj.get("cardNo").isJsonNull() && (jsonObj.get("cardNo") != null && !jsonObj.get("cardNo").isJsonNull()) && !jsonObj.get("cardNo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardNo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardNo").toString()));
      }
      if (!jsonObj.get("expiryMonth").isJsonNull() && (jsonObj.get("expiryMonth") != null && !jsonObj.get("expiryMonth").isJsonNull()) && !jsonObj.get("expiryMonth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiryMonth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiryMonth").toString()));
      }
      if (!jsonObj.get("expiryYear").isJsonNull() && (jsonObj.get("expiryYear") != null && !jsonObj.get("expiryYear").isJsonNull()) && !jsonObj.get("expiryYear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiryYear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiryYear").toString()));
      }
      if (!jsonObj.get("pin").isJsonNull() && (jsonObj.get("pin") != null && !jsonObj.get("pin").isJsonNull()) && !jsonObj.get("pin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pin").toString()));
      }
      if (jsonObj.get("loyaltyPoints") != null && !jsonObj.get("loyaltyPoints").isJsonNull()) {
        JsonArray jsonArrayloyaltyPoints = jsonObj.getAsJsonArray("loyaltyPoints");
        if (jsonArrayloyaltyPoints != null) {
          // ensure the json data is an array
          if (!jsonObj.get("loyaltyPoints").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `loyaltyPoints` to be an array in the JSON string but got `%s`", jsonObj.get("loyaltyPoints").toString()));
          }

          // validate the optional field `loyaltyPoints` (array)
          for (int i = 0; i < jsonArrayloyaltyPoints.size(); i++) {
            LoyaltyDetails.validateJsonObject(jsonArrayloyaltyPoints.get(i).getAsJsonObject());
          };
        }
      }
      if (!jsonObj.get("customerNote").isJsonNull() && (jsonObj.get("customerNote") != null && !jsonObj.get("customerNote").isJsonNull()) && !jsonObj.get("customerNote").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerNote` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerNote").toString()));
      }
      if (!jsonObj.get("userAgent").isJsonNull() && (jsonObj.get("userAgent") != null && !jsonObj.get("userAgent").isJsonNull()) && !jsonObj.get("userAgent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userAgent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userAgent").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PaymentParamsDataRequestV43.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PaymentParamsDataRequestV43' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PaymentParamsDataRequestV43> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PaymentParamsDataRequestV43.class));

       return (TypeAdapter<T>) new TypeAdapter<PaymentParamsDataRequestV43>() {
           @Override
           public void write(JsonWriter out, PaymentParamsDataRequestV43 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PaymentParamsDataRequestV43 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PaymentParamsDataRequestV43 instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PaymentParamsDataRequestV43 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PaymentParamsDataRequestV43
  * @throws IOException if the JSON string is invalid with respect to PaymentParamsDataRequestV43
  */
  public static PaymentParamsDataRequestV43 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PaymentParamsDataRequestV43.class);
  }

 /**
  * Convert an instance of PaymentParamsDataRequestV43 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

